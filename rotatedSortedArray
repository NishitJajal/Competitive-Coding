class Solution {
    public int search(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;

        while (start <= end){
            int mid = start + (end - start)/2;
// Checking whether mid is our target or not.
            if (nums[mid] == target){
                return mid;
            }
// Checking which part is sorted if condition for (left part sorted) and else of that is for right.
            if (nums[start] <= nums[mid]){
// Checking whether target element is there in sorted part or not if yes then modify end variable else start should be updated.
                if (nums[start] <= target && target <= nums[mid]){
                    end = mid - 1;
                }else {
                    start = mid + 1;
                }
            }else {
// Checking if right is sorted then element is there or not ? and update variable accordingly.
                if (nums[mid] <= target && target <= nums[end]){
                    start = mid + 1;
                }else {
                    end = mid - 1;
                }
            }
        }
        return -1;
    }
}
