/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int size = 0;
        ListNode counterNode = head;
        while (counterNode != null){
            counterNode = counterNode.next;
            size++;
        }
        int counter = 1;
        ListNode currentNode = head;
        int prevPosition = size - n;
        if (prevPosition == 0){
            head = head.next;
        }else {
            while (counter != prevPosition){
                currentNode = currentNode.next;
                counter++;
            }
            currentNode.next = currentNode.next.next;
        }
        return head;
    }
}
